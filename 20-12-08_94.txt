1.String 클래스에서 concat 메서드를 설명하시오.
 - 문자열과 문자열을 연결해주는 메서드
 - System.out.println("funny" + "camp");에서 컴파일러에 의해 concat 메소드가 이용되어 ("funny".concat(camp));으로 자동변환 된다.

2.str.substring(2, 4); substring 사용법에 대하여 설명하시오.
 - 해당되는 문자열만 반환시키며, 이 때 str.substring(2, 4)에서 2는 0부터, 4는 1부터 카운트 된다. 

3.st1.compareTo(st2);compareTo 사용법에 대하여 설명하시오.
 - compareTo의 리턴값은 정수 (st1의 객체를 기준으로 비교)
 - 리턴값이 0이면 사전 상에서 st1=st2는 동일, 0보다 크다면 str1>str2 
   0보다 작다면 str1<str2 (즉, str1이 사전 앞에 위치한다는 의미)
  
4.String.valueOf 에 대하여 설명하시오.
 - valueOf는 기본 자료형을 문자열로 변환시켜 저장시키는 메소드이다.
   ex) double e = 2.718281; 
       String se = String.valueOf(e); 
       숫자 2.718281을 문자열로 변환시킴.

5. 아래의 연산과정에서 호출되는 함수(원리)를 써서 표현해 보세요.
 String str = "age: " + 17;
 - String str = "age: ".concat(String.valueOf(17))); 으로 연산된다.
 - valueOf는 데이터 타입마다 코딩이 되어있는 메소드이므로 자동 컴파일된다.

6.StringBuilder 와 String 의 차이는?
 - String은 Immutable의 특성을 가지고 있어 계속적으로 인스턴스를 생성하지만, 
   반대로 StringBuilder는 mutable의 특성을 가지고 있어 하나의 객체를 생성하고, 중간 인스턴스를 생성하지 않는다. 
   (즉, 하나의 인스턴스를 참조하기 때문에 연산된 값에 계속적으로 연산되어 출력)
 - String은 매번 새로운 인스턴스를 생성하기 때문에 추가 혹은 삭제되는 내용이 적을 때 사용되고,
   StringBuilder는 for문과 같이 계속적으로 인스턴스가 생성되어야 하는 경우 주로 사용됨.

7.String 을 이용하여 프로그래밍 하시오.
입력 : 990925-1012999
출력 : 990925 1012999

import java.util.Scanner;
 class Number{
    private String str;
	
    public Number(){
    }
	
    public Number(String str){
      this.str = str;
    }
	
    public void input(){
      Scanner sc = new Scanner(System.in);
      System.out.println("주민번호를 입력해주세요(-포함)");		
      str = sc.nextLine();
      sc.close();
    }
    public void output(){	
      String[] st = str.split("-");
      String ar1 = st[0];
      String ar2 = st[1];

      System.out.println(ar1 + " " + ar2);
    }
 }
-----------------------------------------------------------
 class Numbermain{
    public static void main(String[] args){
      Number number = new Number();
      number.input();
      number.output();
   }
 }

8.아래의 메모리 그림을 그리시오.
 int[] ar1 = new int[5]; 
 - int형 배열을 가진 ar1 방 → 연속적인 5개의 방이 생성.

9.아래를 프로그래밍 하시오.(단, 클래스로 구성할것)
입력:lee sunkyo
출력:first name: lee second name:sunkyo

import java.util.Scanner;
 class Name{
    private String fname;
    private String sname;
	
    public String getFname(){
      return fname;
    }
    public void setFname(String fname){
      this.fname = fname;
    }
    public String getSname(){
       return sname;
    }
    public void setSname(String sname){
      this.sname = sname;
    }
   
    public void input(){
      Scanner sc = new Scanner(System.in);
      System.out.println("영문 성과 이름을 입력해주세요.");
      fname = sc.next();  
      sname = sc.next();
      sc.close();
    }
    public void output(){	
      System.out.println("first name: " + fname);
      System.out.println("second name: " + sname);
    }
 }
-----------------------------------------------------
 class Namemain{
    public static void main(String[] args){
      Name name = new Name();
      name.input();
      name.output();		
   }
 }

10.아래를 프로그래밍 하시오.
입력 : 홍 길동 
출력 : 성 = 홍  이름 = 길동 

입력 : 홍길동 
출력 : 공백이 없군요. 다시 입력해주세요.









11.아래를 프로그래밍 하시오.
"Hello.java" 문자열에서 파일명과 확장자인 java를 분리시키는 프로그램을 짜시오.
입력: Hello.java
출력: 파일이름은:Hello 이며 확장자는 java 입니다.

입력: Java.avi 
출력: 파일이름은:Java 이며 확장자는 avi 입니다.
 import java.util.Scanner;
    class Hellojava{
       private String str;
		
       public Hellojava(){
       }		
       public Hellojava(String str){
         this.str = str;
       }		
       public void input(){
	 Scanner sc = new Scanner(System.in);
         System.out.println("문자열을 입력해주세요");
         str = sc.nextLine();
         sc.close();
       }		
       public void output(){
         int n = 0;
         for(int i = 0; i <= str.length()-1; i++){
              if( str.charAt(i) == '.' )
		   n = i;
       }System.out.println("파일이름은 " + str.substring(0, n) + "이며 확장자는 " + str.substring(n+1) + "입니다.");
       }
    }
----------------------------------------------------------------------
 class Hellomain{
    public static void main(String[] args){
       Hellojava hello = new Hellojava();
       hello.input();
       hello.output();
   }
 }

12. Scanner 클래스를 이용해서 한 줄 읽고, 공백으로 분리된 "단어"가 몇 개 들어 있는지 확인해보자.
   "그만"을 입력할 때까지 반복하는 프로그램이다.힌트(split 함수를 이용해 볼것)

예) 
입력 : Java Programming 
출력 : 단어의 개수는 2

입력 : 자바 수업은 2층 C클래스 
출력 : 단어의 개수는 4

입력 : 그만  
출력 : 프로그램 종료

import java.util.Scanner;
 class Space{
    private String str;
    private int count;
	
    public Space(){
    }	
    public Space(String str){
      this.str = str;
    }
    public void input(){
      while(true){
        Scanner sc = new Scanner(System.in);
        System.out.println("문자를 입력하세요.");		
        str = sc.nextLine();
        sc.close();
			
      for(int i = 0; i<str.length(); i++){
        if(str.charAt(i) == ' ')
        count++;
		}System.out.println("단어의 개수는: " + (count+1));
	}
	}
}
-------------------------------------



