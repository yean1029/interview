1.set classpath 에 대하여 설명하시오.
 - set classpath는 파일 위치를 변경시킨 후 변경된 위치에서 파일을 검색하게 하는 명령어이다.
 - ex) set classpath= .;C:\PackageStudy\MyClass
   set classpath는 현위치에 파일이 없다면 MYClass로 위치를 변경시켜주고, 파일을 MYClass 내에서 검색해주는 역할.

2.절대경로와 상대경로에 대하여 설명하시오.
 - 절대경로: 루트(C:) 디렉토리를 시작으로 지정
 - 상대경로: 현재(.) 디렉토리를 기준으로 지정

3. . 과 .. 의 차이는?
 - .는 현재 디렉토리, ..는 이전 디렉토리를 의미한다.
 -﻿ cd는 change directory (파일의 위치를 변경)을 의미한다.

4.package의 용도는?
 - 두 개의 class 명이 같을 때 다른 package를 생성하여 공간에서의 충돌을 방지해주는 역할.
  (즉, 패키지를 다르게 하면 똑같은 이름의 class 생성이 가능)
 - package를 이용하여 인스턴스 생성 시 구별 가능.
   ex: com.bat.Circle cicle = new com.bat.Circle();
       com.bit.Circle cicle = new com.bat.Circle();
   //같은 class 명이지만 package가 다름.
 
5.package 의 기본적인 명명법(이름짓는법)은?
 - package 이름은 모두 소문자, ﻿인터넷 도메인 이름의 역순으로 구성(끝에는 팀이름 사용).

6.정보은닉에 대하여 설명하시오.
 - 정보은닉을 사용하는 이유? class 내부의 데이터(적합하지 않은 값 입력 등)를 잘못 사용하는 경우를 방지하기 위해 사용.
 - 명령어는 private을 사용한다.

7.접근제한자 4가지 종류에 대하여 설명하시오.
 - ﻿public > protected > default > private
 - public: 다른 package 내에 있는 class를 통해 객체 생성을 가능하게 해주는 역할
   (즉, 어떠한 패키지에서도 인스턴스 생성이 가능)
 - default: public의 역할과는 반대로 동일 package
 - private: 다이렉트로 값을 넣을 수 없게 만드는 정보은닉의 역할.

9.class 에서 붙일 수 있는 접근 제한자 2개를 설명하고, 해당 접근제한자의 사용 목적은?
 - public, default(class 앞에 아무것도 붙이지 않은게 default) 표기 가능.
 - 다른 패키지에서 인스턴스를 통해 객체 생성 여부가 나눠진다. 

10.가위, 바위, 보 게임 작성하시오.

 public class Gbbo{
   private int my;
	
   public Gbbo(int my){
	this.my = my;
   }	
	
   public void play(){
      int com = (int)(Math.random() * 3) + 1;	
		
      if((my == com)){
         System.out.println("당신은 " + my + " 컴퓨터는 " + com + " 동점입니다.");			
      }else if((my == 1) && (com == 2)){
         System.out.println("당신은 " + my + " 컴퓨터는 " + com + " 탈락입니다.");			
      }else if((my == 1) && (com == 3)){
         System.out.println("당신은 " + my + " 컴퓨터는 " + com + " 승리입니다.");			
      }else if((my == 2) && (com == 1)){
         System.out.println("당신은 " + my + " 컴퓨터는 " + com + " 승리입니다.");			
      }else if((my == 2) && (com == 3)){
         System.out.println("당신은 " + my + " 컴퓨터는 " + com + " 탈락입니다.");			
      }else if((my == 3) && (com == 1)){
         System.out.println("당신은 " + my + " 컴퓨터는 " + com + " 탈락입니다.");	
      }else {
         System.out.println("당신은 " + my + " 컴퓨터는 " + com + " 승리입니다.");
      }	
    }
  }
==================================
 import java.util.Scanner;

  public class Gbbomain{
     public static void main(String[] args){
	Scanner scanner = null;
		
	while(true){
	scanner = new Scanner(System.in);
	int my;
		
	System.out.println("가위:1 , 바위:2 , 보:3 을 입력해주세요.");
		
	my = scanner.nextInt();
		
	Gbbo gbbo = new Gbbo(my);
	gbbo.play();
		
		
	System.out.println("계속 하시겠습니까?");
		
	String yesOrno = scanner.next();
	if(yesOrno.equals("Y") || yesOrno.equals("y"))
	    continue;
	else
 	    break;
   }
	System.out.println("프로그램 종료입니다.");
	scanner.close();
   }
 }	


11.아래와 같이 계산기 프로그램을 작성하시오.
==================================
10 + 9   // 입력을 한칸씩 띄우도록 할것
10 + 9 = 19
계속하시겠습니까?
10 - 7
10 - 7 = 3
계속하시겠습니까?

 class Calculator{
    private int x;
    private String pOrm;
    private int y;
	
    public Calculator(int x, String pOrm, int y){
        this.x = x;
        this.pOrm = pOrm;
        this.y = y;
    }
	
    public void cal(){			
        if(pOrm.equals("+")){
           System.out.println(x + pOrm + y + "=" + (x + y));
        }else if(pOrm.equals("-")){
           System.out.println(x + pOrm + y + "=" + (x - y));
        }else{
           System.out.println("+ 혹은 - 입력해주세요.");	
    }
  }
 }
-----------------------------------------
 import java.util.Scanner;

 class Calmain{
    public static void main(String[] args){
       Scanner scanner = null;
		
       while(true){
	  scanner = new Scanner(System.in);
	  int x;
	  String pOrm;
	  int y;
			
	  x = scanner.nextInt();
	  pOrm = scanner.next();
	  y = scanner.nextInt();
			
	  Calculator c = new Calculator(x, pOrm, y);
	  c.cal();		
		
	  System.out.println("계속 하시겠습니까?");
     }
   }		
 }